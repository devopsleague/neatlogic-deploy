<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright(c) 2022 TechSureCo.,Ltd.AllRightsReserved.
  ~ 本内容仅限于深圳市赞悦科技有限公司内部传阅，禁止外泄以及用于其他的商业项目。
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.module.deploy.dao.mapper.DeployAppConfigMapper">

    <select id="getAppSystemIdList" parameterType="codedriver.framework.cmdb.dto.resourcecenter.ResourceSearchVo"
            resultType="java.lang.Long">
        SELECT ce.`id`
        FROM
        `cmdb_cientity` ce
        JOIN `cmdb_ci` cc ON ce.ci_id = cc.id AND cc.name = 'APP'
        left join ${searchVo.schemaName}.`resource_appsystem_appmodule` raa ON raa.resource_id = ce.id
        left join deploy_app_config_user dacu on ce.id = dacu.app_system_id and dacu.user_uuid = #{userUuid}
        <where>
            <if test="searchVo.keyword != null and searchVo.keyword != ''">
                ce.`name` LIKE concat('%', #{searchVo.keyword}, '%') or raa.app_module_name LIKE concat('%',
                #{searchVo.keyword}, '%')
            </if>
        </where>
        order by if(dacu.user_uuid = #{userUuid},1,0) desc,
        CONVERT(ce.name USING gbk) COLLATE gbk_chinese_ci ASC
        limit #{searchVo.startNum}, #{searchVo.pageSize}
    </select>

    <resultMap id="appConfigSystemMap" type="codedriver.framework.deploy.dto.app.DeployAppConfigResourceVo">
        <result column="appSystemId" property="appSystemId"/>
        <result column="appSystemName" property="appSystemName"/>
        <result column="isFavorite" property="isFavorite"/>
        <result column="isConfig" property="isConfig"/>
        <collection property="appModuleList" ofType="codedriver.framework.cmdb.dto.resourcecenter.entity.AppModuleVo">
            <id column="appModuleId" property="id"/>
            <result column="appModuleName" property="name"/>
        </collection>
    </resultMap>

    <select id="getAppSystemListByIdList" resultMap="appConfigSystemMap">
        select ce.id as appSystemId,ce.`name` as appSystemName, if(dacu.user_uuid is null,0,1) as isFavorite,
        if(dac.config is null,0,1) as isConfig
        from  cmdb_cientity ce
        left join deploy_app_config_user dacu on ce.id = dacu.app_system_id and dacu.user_uuid = #{userUuid}
        left join deploy_app_config dac on ce.id = dac.app_system_id and dac.module_id = 0 and dac.env_id = 0
        where ce.id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        order by if(dacu.user_uuid = #{userUuid},1,0) desc,
        CONVERT(ce.name USING gbk) COLLATE gbk_chinese_ci ASC
    </select>

    <select id="getAppSystemModuleListBySystemIdList" resultMap="appConfigSystemMap">
        select ce.id as appSystemId,ce.`name` as appSystemName,
        raa.app_module_id AS appModuleId,
        raa.app_module_name AS appModuleName
        from cmdb_cientity ce
        join ${schemaName}.`resource_appsystem_appmodule` raa on raa.resource_id = ce.id
        where ce.id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="getAppSystemListByUserUuid" resultMap="appConfigSystemMap">
        select cc.id                            as appSystemId,
               cc.name                          as appSystemName,
               if(dacu.user_uuid is null, 0, 1) as isFavorite,
               if(dac.config is null, 0, 1)     as isConfig
        FROM cmdb_cientity cc
                 JOIN cmdb_ci cci ON cc.ci_id = cci.id AND cci.name = 'APP'
                 left join deploy_app_config_user dacu on cc.id = dacu.app_system_id and dacu.user_uuid = #{userUuid}
                 left join deploy_app_config dac on cc.id = dac.app_system_id and dac.module_id = 0 and dac.env_id = 0
        order by if(dacu.user_uuid = #{userUuid}, 1, 0) desc,
                 CONVERT(cc.name USING gbk) COLLATE gbk_chinese_ci ASC
            limit #{searchVo.startNum}, #{searchVo.pageSize}
    </select>

    <select id="getAppConfigAuthorityCount" resultType="java.lang.Integer">
        select count(distinct app_system_id,env_id,auth_uuid)
        from deploy_app_config_authority
        <include refid="appConfigAuthorityWhere"/>
    </select>
    <select id="getAppConfigAuthorityList" resultType="codedriver.framework.deploy.dto.app.DeployAppConfigAuthorityVo">
        select app_system_id as appSystemId,env_id as envId,auth_uuid as authUuid
        from deploy_app_config_authority
        <include refid="appConfigAuthorityWhere"/>
        group by app_system_id,env_id,auth_uuid
        order by auth_uuid
        limit #{startNum}, #{pageSize}
    </select>

    <sql id="appConfigAuthorityWhere">
        <where>
            app_system_id = #{appSystemId}
            <if test="authUuidList != null and authUuidList.size() > 0">
                and auth_uuid in
                <foreach collection="authUuidList" item="authUuid" close=")" separator="," open="(">
                    #{authUuid}
                </foreach>
            </if>
            <if test="actionList != null and actionList.size() > 0">
                and `action` in
                <foreach collection="actionList" item="action" close=")" separator="," open="(">
                    #{action}
                </foreach>
            </if>
            <if test="envIdList != null and envIdList.size() > 0">
                and env_id in
                <foreach collection="envIdList" item="envId" close=")" separator="," open="(">
                    #{envId}
                </foreach>
            </if>
        </where>
    </sql>
    <resultMap id="appConfigAuthorityMap" type="codedriver.framework.deploy.dto.app.DeployAppConfigAuthorityVo">
        <result column="app_system_id" property="appSystemId"/>
        <result column="env_id" property="envId"/>
        <result column="auth_type" property="authType"/>
        <result column="auth_uuid" property="authUuid"/>
        <collection property="actionList" ofType="string">
            <result column="action"/>
        </collection>
    </resultMap>
    <select id="getAppConfigAuthorityDetailList" resultMap="appConfigAuthorityMap">
        select app_system_id,env_id,auth_type,auth_uuid,`action`
        from deploy_app_config_authority
        where
        <foreach collection="appConfigAuthList" item="appConfigAuth" open="(" separator=")or(" close=")">
            app_system_id = #{appConfigAuth.appSystemId} and env_id = #{appConfigAuth.envId} and
            auth_uuid = #{appConfigAuth.authUuid}
        </foreach>
    </select>

    <select id="getAppConfig" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo" resultType="java.lang.String">
        SELECT
            `config`
        FROM `deploy_app_config`
        WHERE `app_system_id` = #{appSystemId}
          and `module_id` = #{moduleId}
          and `env_id` = #{envId}
    </select>

    <select id="getAppConfigVo" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo" resultType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        SELECT
            `app_system_id` as appSystemId,
            `module_id` as moduleId,
            `env_id` as envId,
            `config` as configStr,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`
        FROM `deploy_app_config`
        WHERE `app_system_id` = #{appSystemId}
          and `module_id` = #{moduleId}
          and `env_id` = #{envId}
    </select>

    <select id="getAppConfigOverrideConfig" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigOverrideVo" resultType="java.lang.String">
        SELECT
            `config`
        FROM `deploy_app_config_override`
        WHERE `app_system_id` = #{appSystemId}
        and `module_id` = #{moduleId}
        and `env_id` = #{envId}
    </select>

    <select id="getAppConfigOverrideListByAppSystemId" parameterType="java.lang.Long" resultType="codedriver.framework.deploy.dto.app.DeployAppConfigOverrideVo">
        SELECT
            `app_system_id` AS appSystemId,
            `module_id` AS moduleId,
            `env_id` AS envId,
            `config` AS configStr
        FROM `deploy_app_config_override`
        WHERE `app_system_id` = #{value}
    </select>

    <select id="getAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo" resultType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        SELECT
            `app_system_id` as appSystemId,
            `module_id` as moduleId,
            `env_id` as envId,
            `config` as configStr,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`
        FROM `deploy_app_config_draft`
        WHERE `app_system_id` = #{appSystemId}
          and `module_id` = #{moduleId}
          and `env_id` = #{envId}
    </select>

    <resultMap id="appEnvMap" type="codedriver.framework.deploy.dto.app.DeployAppEnvironmentVo">
        <result column="envId" property="envId"/>
        <result column="envName" property="envName"/>
        <result column="isEdit" property="isEdit"/>
        <collection property="appModuleList" ofType="codedriver.framework.cmdb.dto.resourcecenter.entity.AppModuleVo">
            <id column="appModuleId" property="id"/>
            <result column="appModuleName" property="name"/>
        </collection>
    </resultMap>

    <select id="getDeployAppEnvListByAppSystemIdAndModuleIdList"
            resultMap="appEnvMap">
        ( SELECT
        rse.env_id AS envId,
        rse.env_name AS envName,
        '0' AS isEdit,
        ria.app_module_id AS appModuleId,
        ria.app_module_name AS appModuleName
        FROM
        ${schemaName}.resource_appsystem_appmodule raa
        join ${schemaName}.resource_ipobject_appmodule ria on raa.app_module_id = ria.app_module_id
        join ${schemaName}.resource_appinstance ra on ria.resource_id = ra.id
        JOIN ${schemaName}.resource_softwareservice_env rse ON ra.id = rse.resource_id
        <where>
            <if test="appSystemId != null">
                raa.resource_id = #{appSystemId}
            </if>
            <if test="appModuleIdList != null and appModuleIdList.size() > 0">
                and ria.app_module_id in
                <foreach collection="appModuleIdList" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        ) UNION
        (
        SELECT
        cc.id AS envId,
        cc.name AS envName,
        '1' AS isEdit,
        cce.id AS appModuleId,
        cce.name AS appModuleName
        FROM
        deploy_app_config_env dace
        JOIN cmdb_cientity cc ON cc.id = dace.env_id AND cc.ci_id = ( SELECT id FROM cmdb_ci where name = 'APPEnv' )
        JOIN cmdb_cientity cce ON cce.id = dace.app_module_id
        <where>
            <if test="appSystemId != null">
                dace.app_system_id = #{appSystemId}
            </if>
            <if test="appModuleIdList != null and appModuleIdList.size() > 0">
                and dace.app_module_id in
                <foreach collection="appModuleIdList" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        )
    </select>

    <insert id="insertAppConfigAuthority">
        INSERT INTO `deploy_app_config_authority` (`app_system_id`,
                                                   `env_id`,
                                                   `auth_type`,
                                                   `auth_uuid`,
                                                   `action`,
                                                   `lcd`,
                                                   `lcu`)
        VALUES (#{appSystemId},
                #{envId},
                #{authType},
                #{authUuid},
                #{action},
                #{lcd},
                #{lcu})
        ON DUPLICATE KEY UPDATE `lcd` = #{lcd},
                                `lcu` = #{lcu};
    </insert>
    <insert id="insertAppModuleRunnerGroup">
        INSERT INTO `deploy_app_module_runner_group` (`app_system_id`, `module_id`, `runner_group_id`)
        VALUES (#{appSystemId}, #{moduleId}, #{runnerGroupId})
        ON DUPLICATE KEY UPDATE `runner_group_id` = #{runnerGroupId}
    </insert>
    <insert id="insertAppEnvAutoConfig">
        INSERT INTO deploy_app_env_auto_config
        (`app_system_id`,`module_id`,`env_id`,`instance_id`,`key`,`value`,`lcd`,`lcu`)
        VALUES
        <foreach collection="keyValueList" item="keyValue" separator="),(" open="(" close=")">
            #{appSystemId},#{moduleId},#{envId},#{instanceId},#{keyValue.key},#{keyValue.value},#{lcd},#{lcu}
        </foreach>
        ON DUPLICATE KEY UPDATE `key` = VALUES(`key`),`value` = VALUES(`value`),`lcd`= VALUES(`lcd`),`lcu` =
        VALUES(`lcu`);
    </insert>
    <insert id="insertAppConfig" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        INSERT INTO `deploy_app_config` (
            `app_system_id`,
            `module_id`,
            `env_id`,
            `config`,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`
        )
        VALUES
        (
            #{appSystemId},
            #{moduleId},
            #{envId},
            #{configStr},
            NOW(3),
            #{fcu},
            NOW(3),
            #{fcu}
        )
    </insert>

    <insert id="insertAppConfigOverride" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigOverrideVo">
        INSERT INTO `deploy_app_config_override` (
            `app_system_id`,
            `module_id`,
            `env_id`,
            `config`
        )
        VALUES
        (
            #{appSystemId},
            #{moduleId},
            #{envId},
            #{configStr}
        )
        ON DUPLICATE KEY UPDATE `config` = #{configStr}
    </insert>

    <insert id="insertAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        INSERT INTO `deploy_app_config_draft` (
            `app_system_id`,
            `module_id`,
            `env_id`,
            `config`,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`
        )
        VALUES
        (
            #{appSystemId},
            #{moduleId},
            #{envId},
            #{configStr},
            NOW(3),
            #{fcu},
            NOW(3),
            #{fcu}
        )
    </insert>

    <insert id="insertAppConfigEnv">
        insert into deploy_app_config_env(`app_system_id`, `app_module_id`, `env_id`)
        VALUES (#{appSystemId},
                #{appModuleId},
                #{envId}) ON DUPLICATE KEY
        UPDATE `app_system_id` = #{appSystemId},
            `app_module_id` = #{appModuleId},
            `env_id` = #{envId}
    </insert>

    <insert id="insertAppConfigSystemFavorite">
        insert into deploy_app_config_user(`app_system_id`, `user_uuid`)
        VALUES (#{appSystemId},
                #{userUuid}) ON DUPLICATE KEY
        UPDATE `app_system_id` = #{appSystemId},
            `user_uuid` = #{userUuid}
    </insert>

    <update id="updateAppConfig" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        UPDATE `deploy_app_config`
        SET `config` = #{configStr},
            `lcu` = #{lcu},
            `lcd` = NOW(3)
        WHERE `app_system_id` = #{appSystemId}
          and `module_id` = #{moduleId}
          and `env_id` = #{envId}
    </update>

    <update id="updateAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        UPDATE `deploy_app_config_draft`
        SET `config` = #{configStr},
            `lcu` = #{lcu},
            `lcd` = NOW(3)
        WHERE `app_system_id` = #{appSystemId}
          and `module_id` = #{moduleId}
          and `env_id` = #{envId}
    </update>

    <delete id="deleteAppConfigAuthorityByAppIdAndEnvIdAndAuthUuidAndLcd">
        delete
        from `deploy_app_config_authority`
        where `app_system_id` = #{appSystemId}
        and `env_id` = #{envId}
        and `auth_uuid` = #{authUuid}
        <if test="lcd != null">
            and `lcd` != #{lcd}
        </if>
    </delete>
    <delete id="deleteAppEnvAutoConfig">
        delete
        from deploy_app_env_auto_config
        where
        `app_system_id` = #{appSystemId}
        and `module_id`=#{moduleId}
        and `env_id` = #{envId}
        and `instance_id` = #{instanceId}
        <if test="lcd != null">
            and `lcd` != #{lcd}
        </if>
    </delete>

    <delete id="deleteAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        DELETE FROM `deploy_app_config_draft`
        WHERE `app_system_id` = #{appSystemId}
          and `module_id` = #{moduleId}
          and `env_id` = #{envId}
    </delete>

    <delete id="deleteAppConfigEnvByAppSystemIdAndAppModuleIdAndEnvId">
        DELETE FROM `deploy_app_config_env`
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </delete>

    <delete id="deleteAppConfigSystemFavoriteByAppSystemIdAndUserUuid">
        DELETE FROM `deploy_app_config_user`
        WHERE `app_system_id` = #{appSystemId}
          and `user_uuid` = #{userUuid}
    </delete>
</mapper>