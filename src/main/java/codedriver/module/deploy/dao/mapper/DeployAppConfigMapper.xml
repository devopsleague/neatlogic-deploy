<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright(c) 2022 TechSureCo.,Ltd.AllRightsReserved.
  ~ 本内容仅限于深圳市赞悦科技有限公司内部传阅，禁止外泄以及用于其他的商业项目。
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.module.deploy.dao.mapper.DeployAppConfigMapper">

    <select id="getAppSystemIdList" parameterType="codedriver.framework.cmdb.dto.resourcecenter.ResourceSearchVo"
            resultType="java.lang.Long">
        SELECT DISTINCT id from
        (
        SELECT a.`id`
        FROM ${searchVo.schemaName}.`scence_appsystem_appmodule` a
        left join deploy_app_config_user dacu on a.`id` = dacu.app_system_id and dacu.user_uuid = #{userUuid}
        <if test="searchVo.isConfig != null">
            left join deploy_app_config dac on a.`id` = dac.app_system_id and dac.app_module_id = 0 and dac.env_id = 0
        </if>
        <where>
            <if test="searchVo.keyword != null and searchVo.keyword != ''">
                a.`name` LIKE concat('%', #{searchVo.keyword}, '%') or a.`app_module_name` LIKE concat('%',
                #{searchVo.keyword}, '%')
            </if>
            <choose>
                <when test="searchVo.isConfig != null and searchVo.isConfig == 1">
                    and dac.`config` is not NULL
                </when>
                <when test="searchVo.isConfig != null and searchVo.isConfig == 0">
                    and dac.`config` is NULL
                </when>
                <otherwise>
                </otherwise>
            </choose>
        </where>
        order by if(dacu.user_uuid = #{userUuid},1,0) desc,
        CONVERT(a.`abbr_name` USING gbk) COLLATE gbk_chinese_ci ASC) a
        <if test="searchVo.needPage">
            limit #{searchVo.startNum}, #{searchVo.pageSize}
        </if>
    </select>

    <resultMap id="appConfigSystemMap" type="codedriver.framework.deploy.dto.app.DeployAppSystemVo">
        <result column="appSystemId" property="id"/>
        <result column="appSystemName" property="name"/>
        <result column="appSystemNameAbbrName" property="abbrName"/>
        <result column="isFavorite" property="isFavorite"/>
        <result column="isConfig" property="isConfig"/>
        <collection property="appModuleList" ofType="codedriver.framework.deploy.dto.app.DeployAppModuleVo">
            <id column="appModuleId" property="id"/>
            <result column="appModuleName" property="name"/>
            <result column="appModuleNameAbbrName" property="abbrName"/>
        </collection>
    </resultMap>

    <select id="getAppSystemListByIdList" resultMap="appConfigSystemMap">
        select sa.id as appSystemId,sa.`name` as appSystemName,sa.`abbr_name` as appSystemNameAbbrName, if(dacu.user_uuid is null,0,1) as isFavorite,
        if(dac.config is null,0,1) as isConfig
        from ${schemaName}.`scence_appsystem` sa
        left join deploy_app_config_user dacu on sa.id = dacu.app_system_id and dacu.user_uuid = #{userUuid}
        left join deploy_app_config dac on sa.id = dac.app_system_id and dac.app_module_id = 0 and dac.env_id = 0
        where sa.id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        order by if(dacu.user_uuid = #{userUuid},1,0) desc,
        CONVERT(sa.abbr_name USING gbk) COLLATE gbk_chinese_ci ASC
    </select>

    <select id="getAppSystemModuleListBySystemIdList" resultMap="appConfigSystemMap">
        select a.`id` as appSystemId,a.`name` as appSystemName,
        a.`app_module_id` AS appModuleId,
        a.`app_module_name` AS appModuleName,
        a.`app_module_abbr_name` AS appModuleNameAbbrName
        from ${schemaName}.`scence_appsystem_appmodule` a
        <if test="isConfig != null">
            left join deploy_app_config b on a.id = b.app_system_id and b.app_module_id = 0 and b.env_id = 0
        </if>
        where a.`app_module_id` is not null
        and a.`id` in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        <choose>
            <when test="isConfig != null and isConfig == 1">
                and b.`config` is not NULL
            </when>
            <when test="isConfig != null and isConfig == 0">
                and b.`config` is NULL
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="getAppSystemListByUserUuid" resultMap="appConfigSystemMap">
        select cc.id as appSystemId,
        cc.name as appSystemName,
        if(dacu.user_uuid is null, 0, 1) as isFavorite,
        if(dac.config is null, 0, 1) as isConfig
        FROM cmdb_cientity cc
        JOIN cmdb_ci cci ON cc.ci_id = cci.id AND cci.name = 'APP'
        left join deploy_app_config_user dacu on cc.id = dacu.app_system_id and dacu.user_uuid = #{userUuid}
        left join deploy_app_config dac on cc.id = dac.app_system_id and dac.app_module_id = 0 and dac.env_id = 0
        <where>
            <choose>
                <when test="searchVo.isConfig != null and searchVo.isConfig == 1">
                    dac.`config` is not NULL
                </when>
                <when test="searchVo.isConfig != null and searchVo.isConfig == 0">
                    dac.`config` is NULL
                </when>
                <otherwise>
                </otherwise>
            </choose>
        </where>
        order by if(dacu.user_uuid = #{userUuid}, 1, 0) desc,
        CONVERT(cc.name USING gbk) COLLATE gbk_chinese_ci ASC
        limit #{searchVo.startNum}, #{searchVo.pageSize}
    </select>

    <select id="getViewableAppSystemIdList" resultType="java.lang.Long" useCache="false">
        SELECT
        `app_system_id`
        FROM `deploy_app_config_authority`
        WHERE `action` IN ('view', 'edit')
        AND (
              (`auth_type` = 'common' AND `auth_uuid` = 'alluser')
            <if test="userUuid != null and userUuid != ''">
                OR (`auth_type` = 'user' AND `auth_uuid` = #{userUuid})
            </if>
            <if test="teamUuidList != null and teamUuidList.size() > 0">
                OR (`auth_type` = 'team' AND `auth_uuid` IN
                <foreach collection="teamUuidList" item="teamUuid" open="(" separator="," close=")">
                    #{teamUuid}
                </foreach>
                )
            </if>
            <if test="roleUuidList != null and roleUuidList.size() > 0">
                OR (`auth_type` = 'role' AND `auth_uuid` IN
                <foreach collection="roleUuidList" item="roleUuid" open="(" separator="," close=")">
                    #{roleUuid}
                </foreach>
                )
            </if>
        )
    </select>

    <select id="getAppConfigAuthorityCount" resultType="java.lang.Integer">
        select count(distinct app_system_id,env_id,auth_uuid)
        from deploy_app_config_authority
        <include refid="appConfigAuthorityWhere"/>
    </select>
    <select id="getAppConfigAuthorityList" resultType="codedriver.framework.deploy.dto.app.DeployAppConfigAuthorityVo">
        select app_system_id as appSystemId,env_id as envId,auth_uuid as authUuid
        from deploy_app_config_authority
        <include refid="appConfigAuthorityWhere"/>
        group by app_system_id,env_id,auth_uuid
        order by auth_uuid
        limit #{startNum}, #{pageSize}
    </select>

    <sql id="appConfigAuthorityWhere">
        <where>
            app_system_id = #{appSystemId}
            <if test="authUuidList != null and authUuidList.size() > 0">
                and auth_uuid in
                <foreach collection="authUuidList" item="authUuid" close=")" separator="," open="(">
                    #{authUuid}
                </foreach>
            </if>
            <if test="actionList != null and actionList.size() > 0">
                and `action` in
                <foreach collection="actionList" item="action" close=")" separator="," open="(">
                    #{action}
                </foreach>
            </if>
            <if test="envIdList != null and envIdList.size() > 0">
                and env_id in
                <foreach collection="envIdList" item="envId" close=")" separator="," open="(">
                    #{envId}
                </foreach>
            </if>
        </where>
    </sql>
    <resultMap id="appConfigAuthorityMap" type="codedriver.framework.deploy.dto.app.DeployAppConfigAuthorityVo">
        <result column="app_system_id" property="appSystemId"/>
        <result column="env_id" property="envId"/>
        <result column="auth_type" property="authType"/>
        <result column="auth_uuid" property="authUuid"/>
        <collection property="actionList" ofType="string">
            <result column="action"/>
        </collection>
    </resultMap>
    <select id="getAppConfigAuthorityDetailList" resultMap="appConfigAuthorityMap">
        select app_system_id,env_id,auth_type,auth_uuid,`action`
        from deploy_app_config_authority
        where
        <foreach collection="appConfigAuthList" item="appConfigAuth" open="(" separator=")or(" close=")">
            app_system_id = #{appConfigAuth.appSystemId} and env_id = #{appConfigAuth.envId} and
            auth_uuid = #{appConfigAuth.authUuid}
        </foreach>
    </select>

    <select id="getAppConfig" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo"
            resultType="java.lang.String">
        SELECT `config`
        FROM `deploy_app_config`
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </select>

    <select id="getAppConfigVo" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo"
            resultType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        SELECT `app_system_id` as appSystemId,
               `app_module_id` as appModuleId,
               `env_id`        as envId,
               `config`        as configStr,
               `fcd`,
               `fcu`,
               `lcd`,
               `lcu`
        FROM `deploy_app_config`
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </select>

    <select id="getAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo"
            resultType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        SELECT `app_system_id` as appSystemId,
               `app_module_id` as appModuleId,
               `env_id`        as envId,
               `config`        as configStr,
               `fcd`,
               `fcu`,
               `lcd`,
               `lcu`
        FROM `deploy_app_config_draft`
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </select>

    <resultMap id="appEnvMap" type="codedriver.framework.deploy.dto.app.DeployAppEnvironmentVo">
        <result column="envId" property="id"/>
        <result column="envName" property="name"/>
        <collection property="appModuleList" ofType="codedriver.framework.cmdb.dto.resourcecenter.entity.AppModuleVo">
            <id column="appModuleId" property="id"/>
            <result column="appModuleName" property="name"/>
        </collection>
    </resultMap>

    <select id="getDeployAppEnvListByAppSystemIdAndModuleIdList"
            resultMap="appEnvMap">
        (
        SELECT
        a.`env_id` AS envId,
        a.`env_name` AS envName,
        a.`app_module_id` AS appModuleId,
        a.`app_module_name` AS appModuleName
        FROM ${schemaName}.`scence_appinstance_env_appmodule_appsystem` a
        <where>
            a.`env_id` is not null
            <choose>
                <when test="appSystemId != null">
                    AND a.`app_system_id` = #{appSystemId}
                </when>
                <otherwise>
                    and a.`app_system_id` is not null
                </otherwise>
            </choose>
            <choose>
                <when test="appModuleIdList != null and appModuleIdList.size() > 0">
                    and a.`app_module_id` in
                    <foreach collection="appModuleIdList" item="appModuleId" separator="," open="(" close=")">
                        #{appModuleId}
                    </foreach>
                </when>
                <otherwise>
                    and a.`app_module_id` is not null
                </otherwise>
            </choose>
        </where>
        ) UNION
        (
        SELECT
        cc.id AS envId,
        cc.name AS envName,
        cce.id AS appModuleId,
        cce.name AS appModuleName
        FROM
        deploy_app_config_env dace
        JOIN cmdb_cientity cc ON cc.id = dace.env_id
        JOIN cmdb_cientity cce ON cce.id = dace.app_module_id
        <where>
            <if test="appSystemId != null">
                dace.app_system_id = #{appSystemId}
            </if>
            <if test="appModuleIdList != null and appModuleIdList.size() > 0">
                and dace.app_module_id in
                <foreach collection="appModuleIdList" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        )
    </select>

    <select id="getDeployAppHasNotEnvListByAppSystemIdAndModuleIdList"
            resultType="codedriver.framework.deploy.dto.app.DeployAppEnvironmentVo">
        SELECT a.`id`,
        a.`name`
        FROM  ${schemaName}.`scence_env` a
        where a.id not in(
        (
        SELECT
        a.`env_id`
        FROM ${schemaName}.`scence_appinstance_env_appmodule_appsystem` a
        <where>
            a.`env_id` is not null
            <choose>
                <when test="appSystemId != null">
                    AND a.`app_system_id` = #{appSystemId}
                </when>
                <otherwise>
                    and a.`app_system_id` is not null
                </otherwise>
            </choose>
            <choose>
                <when test="appModuleId != null">
                    and a.`app_module_id` = #{appModuleId}
                </when>
                <otherwise>
                    and a.`app_module_id` is not null
                </otherwise>
            </choose>
        </where>
        ) UNION
        (
        SELECT
        cc.id
        FROM
        deploy_app_config_env dace
        JOIN cmdb_cientity cc ON cc.id = dace.env_id
        JOIN cmdb_cientity cce ON cce.id = dace.app_module_id
        <where>
            <if test="appSystemId != null">
                dace.app_system_id = #{appSystemId}
            </if>
            <if test="appModuleId != null">
                and dace.app_module_id = #{appModuleId}
            </if>
        </where>
        )
        )
    </select>

    <select id="getCmdbEnvListByAppSystemIdAndModuleId"
            resultType="codedriver.framework.deploy.dto.app.DeployAppEnvironmentVo">
        SELECT distinct
        a.`env_id` AS id,
        a.`env_name` AS name,
        0 AS isDeletable
        FROM ${schemaName}.`scence_appinstance_env_appmodule_appsystem` a
        <where>
            a.`env_id` is not null
            <choose>
                <when test="appSystemId != null">
                    AND a.`app_system_id` = #{appSystemId}
                </when>
                <otherwise>
                    AND a.app_system_id is not null
                </otherwise>
            </choose>
            <choose>
                <when test="appModuleId != null">
                    and a.`app_module_id` = #{appModuleId}
                </when>
                <otherwise>
                    and a.`app_module_id` is not null
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="getDeployAppEnvListByAppSystemIdAndModuleId"
            resultType="codedriver.framework.deploy.dto.app.DeployAppEnvironmentVo">
        SELECT
        cc.id AS id,
        cc.name AS name,
        1 AS isDeletable
        FROM
        deploy_app_config_env dace
        JOIN cmdb_cientity cc ON cc.id = dace.env_id
        JOIN cmdb_cientity cce ON cce.id = dace.app_module_id
        <where>
            <if test="appSystemId != null">
                and dace.app_system_id = #{appSystemId}
            </if>
            <if test="appModuleId != null">
                and dace.app_module_id = #{appModuleId}
            </if>
        </where>
    </select>

    <select id="getHasEnvAppModuleIdListByAppSystemIdAndModuleIdList"
            resultType="java.lang.Long">
        (
        SELECT
        a.`app_module_id`
        FROM ${schemaName}.`scence_appinstance_env_appmodule_appsystem` a
        <where>
            a.`env_id` IS NOT NULL
            <choose>
                <when test="appSystemId != null">
                    AND a.`app_system_id` = #{appSystemId}
                </when>
                <otherwise>
                    and a.`app_system_id` IS NOT NULL
                </otherwise>
            </choose>
            <choose>
                <when test="appModuleIdList != null and appModuleIdList.size() > 0">
                    and a.`app_module_id` in
                    <foreach collection="appModuleIdList" item="appModuleId" open="(" close=")" separator=",">
                        #{appModuleId}
                    </foreach>
                </when>
                <otherwise>
                    and a.`app_module_id` IS NOT NULL
                </otherwise>
            </choose>
        </where>
        ) UNION
        (
        SELECT
        dace.app_module_id
        FROM
        deploy_app_config_env dace
        JOIN cmdb_cientity cc ON cc.id = dace.env_id
        <where>
            <if test="appSystemId != null">
                dace.app_system_id = #{appSystemId}
            </if>
            <if test="appModuleIdList != null and appModuleIdList.size() > 0">
                and dace.app_module_id in
                <foreach collection="appModuleIdList" item="appModuleId" open="(" close=")" separator=",">
                    #{appModuleId}
                </foreach>
            </if>
        </where>
        )
    </select>

    <select id="getAppEnvAutoConfigKeyValueList"
            parameterType="codedriver.framework.deploy.dto.app.DeployAppEnvAutoConfigVo"
            resultType="codedriver.framework.deploy.dto.app.DeployAppEnvAutoConfigKeyValueVo">
        select `key`,
               `value`
        from deploy_app_env_auto_config
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
          and `instance_id` = #{instanceId}
    </select>

    <resultMap id="runnerGroupMap" type="codedriver.framework.dto.runner.RunnerGroupVo">
        <id column="groupId" property="id"/>
        <result column="groupName" property="name"/>
        <result column="groupDescription" property="description"/>
        <collection property="runnerList" ofType="codedriver.framework.dto.runner.RunnerVo">
            <id column="runnerId" property="id"/>
            <result column="runnerName" property="name"/>
            <result column="runnerUrl" property="url"/>
            <result column="runnerAccessKey" property="accessKey"/>
            <result column="runnerAccessSecret" property="accessSecret"/>
            <result column="runnerAuthType" property="authType"/>
            <result column="runnerNettyIp" property="nettyIp"/>
            <result column="runnerNettyPort" property="nettyPort"/>
            <result column="runnerHost" property="host"/>
            <result column="runnerPort" property="port"/>
        </collection>
        <collection property="runnerMapList" ofType="codedriver.framework.dto.runner.RunnerMapVo">
            <id column="runnerId" property="id"/>
            <result column="runnerName" property="name"/>
            <result column="runnerMapId" property="runnerMapId"/>
            <result column="runnerUrl" property="url"/>
            <result column="runnerAccessKey" property="accessKey"/>
            <result column="runnerAccessSecret" property="accessSecret"/>
            <result column="runnerAuthType" property="authType"/>
            <result column="runnerNettyIp" property="nettyIp"/>
            <result column="runnerNettyPort" property="nettyPort"/>
            <result column="runnerHost" property="host"/>
            <result column="runnerPort" property="port"/>
        </collection>
    </resultMap>

    <select id="getAppModuleRunnerGroupByAppSystemIdAndModuleId"
            resultMap="runnerGroupMap">
        SELECT rg.id             AS groupId,
               rg.name           AS groupName,
               rg.description    AS groupDescription,
               r.`id`            AS runnerId,
               r.`name`          AS runnerName,
               r.`url`           AS runnerUrl,
               r.`access_key`    AS runnerAccessKey,
               r.`access_secret` AS runnerAccessSecret,
               r.`auth_type`     AS runnerAuthType,
               r.`netty_ip`      AS runnerNettyIp,
               r.`netty_port`    AS runnerNettyPort,
               r.`host`          AS runnerHost,
               r.`port`          AS runnerPort,
               rm.id             as runnerMapId
        FROM deploy_app_module_runner_group damrg
                 JOIN runnergroup rg ON rg.id = damrg.runner_group_id
                 LEFT JOIN runnergroup_runner rgr ON rg.`id` = rgr.`runnergroup_id`
                 LEFT JOIN runner r ON r.`id` = rgr.`runner_id`
                 LEFT JOIN `runner_map` rm ON r.`id` = rm.`runner_id`
        WHERE damrg.app_system_id = #{appSystemId}
          AND damrg.app_module_id = #{appModuleId}
    </select>

    <select id="getAppEnvAutoConfigListBySystemIdAndModuleIdAndEnvIdAndInstanceIdList"
            resultMap="appEnvAutoConfigMap">
        SELECT
        daeac.`app_system_id` AS appSystemId,
        daeac.`app_module_id` AS appModuleId,
        daeac.`env_id` AS envId,
        daeac.`instance_id` AS instanceId,
        daeac.`key`,
        daeac.`value`
        FROM
        deploy_app_env_auto_config daeac
        WHERE daeac.`app_system_id` = #{appSystemId}
        and daeac.`app_module_id` = #{appModuleId}
        and daeac.`env_id` = #{envId}
        and daeac.`instance_id` in
        <foreach collection="instanceIdList" item="instanceId" open="(" close=")" separator=",">
            #{instanceId}
        </foreach>
    </select>

    <sql id="searchAppModuleEnvConfigInstance">
        FROM ${schemaName}.`scence_appinstance_env_appmodule_appsystem` a
        WHERE a.`app_system_id` = #{searchVo.appSystemId}
        AND a.`app_module_id` = #{searchVo.appModuleId}
        AND a.`env_id` = #{searchVo.envId}
        <if test="searchVo.isAutoConfig != null">
            AND a.`id`
            <if test="searchVo.isAutoConfig == 1">
                in
            </if>
            <if test="searchVo.isAutoConfig == 0">
                not in
            </if>
            (select `instance_id`
            from `deploy_app_env_auto_config`
            WHERE `app_system_id` = #{searchVo.appSystemId}
            and `app_module_id` = #{searchVo.appModuleId}
            and `env_id` = #{searchVo.envId})
        </if>
    </sql>

    <select id="getAppModuleEnvAutoConfigInstanceIdCount" resultType="int">
        SELECT count(a.id)
        <include refid="searchAppModuleEnvConfigInstance"></include>
    </select>

    <select id="getAppModuleEnvAutoConfigInstanceIdList" resultType="java.lang.Long">
        SELECT a.id
        <include refid="searchAppModuleEnvConfigInstance"></include>
        ORDER BY a.id DESC
        LIMIT #{searchVo.startNum}, #{searchVo.pageSize}
    </select>

    <select id="getAppConfigEnvInstanceCount" resultType="int">
        SELECT count(a.`id`)
        FROM `scence_appinstance_ip_port_env_appmodule` a
        WHERE
        ( a.`app_module_id` IS NULL AND a.`env_id` IS NULL )
        OR ( a.`app_module_id` IS NULL AND a.`env_id` = #{envId} )
        OR (a.`app_module_id` = #{appModuleId} AND a.`env_id` IS NULL)
        <if test="keyword != null and keyword != ''">
            AND a.`ip` LIKE concat('%', #{keyword}, '%') or a.`port` LIKE concat('%', #{keyword},'%')
        </if>
    </select>

    <select id="searchAppConfigEnvInstanceList"
            resultType="codedriver.framework.deploy.dto.app.DeployAppConfigInstanceVo">
        SELECT a.`id`,
        a.`ip`,
        a.`port`,
        a.`name`
        FROM `scence_appinstance_ip_port_env_appmodule` a
        WHERE
        ( a.`app_module_id` IS NULL AND a.`env_id` IS NULL )
        OR ( a.`app_module_id` IS NULL AND a.`env_id` = #{envId} )
        OR (a.`app_module_id` = #{appModuleId} AND a.`env_id` IS NULL)
        <if test="keyword != null and keyword != ''">
            AND a.`ip` LIKE concat('%', #{keyword}, '%') or a.`port` LIKE concat('%', #{keyword},'%')
        </if>
        ORDER BY a.`id` DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getAppSystemIdListCount" resultType="java.lang.Integer">
        SELECT count(distinct a.`id`) FROM ${schemaName}.`scence_appsystem_appmodule` a
        <if test="isConfig != null">
            left join deploy_app_config b on a.`id` = b.`app_system_id` and b.`app_module_id` = 0 and b.`env_id` = 0
        </if>
        <where>
            <if test="keyword != null and keyword != ''">
                a.`name` LIKE concat('%', #{keyword}, '%') or a.`app_module_name` LIKE concat('%', #{keyword}, '%')
            </if>
            <choose>
                <when test="isConfig != null and isConfig == 1">
                    and dac.`config` is not NULL
                </when>
                <when test="isConfig != null and isConfig == 0">
                    and dac.`config` is NULL
                </when>
                <otherwise>
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="getCiEntityIdListCount" resultType="java.lang.Integer">
        SELECT COUNT(a.id)
        FROM `cmdb_cientity` a
        JOIN `cmdb_ci` b ON a.ci_id = b.id
        <if test="isConfig != null">
            left join deploy_app_config dac on a.id = dac.app_system_id and dac.app_module_id = 0 and dac.env_id = 0
        </if>
        where b.name = 'APP'
        <choose>
            <when test="isConfig != null and isConfig == 1">
                and dac.`config` is not NULL
            </when>
            <when test="isConfig != null and isConfig == 0">
                and dac.`config` is NULL
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>
    <select id="getAppConfigListByAppSystemId"
            resultType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        SELECT `id`,
               `app_system_id` as appSystemId,
               `app_module_id` as appModuleId,
               `env_id`        as envId,
               `config`        as configStr,
               `fcd`,
               `fcu`,
               `lcd`,
               `lcu`
        FROM `deploy_app_config`
        WHERE `app_system_id` = #{appSystemId}
    </select>
    <select id="getAppConfigByAppSystemIdAndAppModuleIdAndEnvId"
            resultType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        SELECT `app_system_id` as appSystemId,
               `app_module_id` as appModuleId,
               `env_id`        as envId,
               `config`        as configStr,
               `fcd`,
               `fcu`,
               `lcd`,
               `lcu`
        FROM `deploy_app_config`
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </select>

    <select id="getAppConfigEnv" resultType="int">
        SELECT count(1)
        FROM deploy_app_config_env
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId !=  0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envId != 0L">
                AND `env_id` = #{envId}
            </if>
        </where>
    </select>

    <resultMap id="DBConfigMap" type="codedriver.framework.deploy.dto.app.DeployAppConfigEnvDBConfigVo">
        <id column="id" property="id"/>
        <result column="appSystemId" property="appSystemId"/>
        <result column="appModuleId" property="appModuleId"/>
        <result column="envId" property="envId"/>
        <result column="DBAlias" property="dbAlias"/>
        <result column="dbResourceId" property="dbResourceId"/>
        <result column="dbResourceName" property="dbResourceName"/>
        <result column="configStr" property="configStr"/>
        <collection property="accountList" ofType="codedriver.framework.deploy.dto.app.DeployAppConfigEnvDBConfigAccountVo">
            <id column="DBConfigAccountId" property="id"/>
            <result column="accountAlias" property="accountAlias"/>
            <result column="accountId" property="accountId"/>
            <result column="account" property="account"/>
            <result column="passwordCipher" property="passwordCipher"/>
        </collection>
    </resultMap>

    <select id="getAppConfigEnvDBConfigById"
            resultMap="DBConfigMap">
        SELECT a.id,
               a.app_system_id  as appSystemId,
               a.app_module_id  as appModuleId,
               a.env_id         as envId,
               a.db_alias       as dbAlias,
               a.db_resource_id as dbResourceId,
               a.config         as configStr,
               b.id             as DBConfigAccountId,
               b.account_alias  as accountAlias,
               b.account_id     as accountId
        FROM deploy_app_config_env_db a
                 LEFT JOIN deploy_app_config_env_db_account b ON a.id = b.db_config_id
        WHERE a.id = #{id}
    </select>

    <select id="getAppConfigEnvDBConfigListByAppSystemIdAndAppModuleIdAndEnvId"
            resultMap="DBConfigMap">
        SELECT a.id,
               a.app_system_id  as appSystemId,
               a.app_module_id  as appModuleId,
               a.env_id         as envId,
               a.db_alias       as dbAlias,
               a.db_resource_id as dbResourceId,
               cc.name          as dbResourceName,
               a.config         as configStr,
               b.id             as DBConfigAccountId,
               b.account_alias  as accountAlias,
               b.account_id     as accountId,
               c.account        as account,
               c.password        as passwordCipher
        FROM deploy_app_config_env_db a
                 LEFT JOIN cmdb_cientity cc ON cc.id = a.db_resource_id
                 LEFT JOIN deploy_app_config_env_db_account b ON a.id = b.db_config_id
                 LEFT JOIN `cmdb_resourcecenter_account` c ON c.`id` = b.account_id
        WHERE a.app_system_id = #{appSystemId}
          AND a.app_module_id = #{appModuleId}
          AND a.env_id = #{envId}
    </select>

    <resultMap id="appEnvAutoConfigMap" type="codedriver.framework.deploy.dto.app.DeployAppEnvAutoConfigVo">
        <result column="appSystemId" property="appSystemId"/>
        <result column="appModuleId" property="appModuleId"/>
        <result column="envId" property="envId"/>
        <result column="instanceId" property="instanceId"/>
        <collection property="keyValueList"
                    ofType="codedriver.framework.deploy.dto.app.DeployAppEnvAutoConfigKeyValueVo">
            <id column="key" property="key"/>
            <result column="value" property="value"/>
        </collection>
    </resultMap>

    <resultMap id="DatabaseResourceMap" type="codedriver.framework.cmdb.dto.resourcecenter.ResourceVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type_name" property="typeName"/>
        <result column="ip" property="ip"/>
        <result column="port" property="port"/>
    </resultMap>

    <select id="getAppConfigEnvDatabaseCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(a.id)
        <include refid="searchDatabase"></include>
    </select>
    <sql id="searchDatabase">
        FROM ${schemaName}.`scence_database_env_appmodule` a
        <where>
            (a.env_id = #{searchVo.envId} OR a.env_id IS NULL)
            AND (
            a.app_module_id = #{searchVo.appModuleId}
            OR a.app_module_id IS NULL
            )
            <if test="searchVo.defaultValue != null and searchVo.defaultValue.size() > 0">
                AND a.`id` IN
                <foreach collection="searchVo.defaultValue" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="searchVo.notInIdList != null and searchVo.notInIdList.size() > 0">
                AND a.`id` NOT IN
                <foreach collection="searchVo.notInIdList" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="getAppConfigEnvDatabaseResourceIdList" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT a.id
        <include refid="searchDatabase"></include>
        <if test="searchVo.needPage">
            LIMIT #{searchVo.startNum}, #{searchVo.pageSize}
        </if>
    </select>

    <select id="getHasEnvAppSystemIdListByAppSystemIdList"
            resultType="java.lang.Long">
        (
        SELECT
        a.`app_system_id` as id
        FROM
        ${schemaName}.`scence_appinstance_env_appmodule_appsystem` a
        <where>
            a.`env_id` is not null
            and a.`app_module_id` is not null
            and a.`app_system_id` in
            <foreach collection="idList" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </where>
        ) UNION
        (
        SELECT
        dace.app_system_id as id
        FROM
        deploy_app_config_env dace
        where dace.app_system_id
        in
        <foreach collection="idList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        )
    </select>

    <select id="getAppConfigEnvDatabaseResourceListByIdList" resultMap="DatabaseResourceMap">
        ${sql}
    </select>

    <resultMap id="AppModuleMap" type="codedriver.framework.deploy.dto.app.DeployAppModuleVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="abbr_name" property="abbrName"/>
    </resultMap>

    <select id="getAppModuleListByIdList" resultMap="AppModuleMap">
        ${sql}
    </select>

    <select id="getAppConfigAppSystemIdListByAppSystemIdList" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT
            `app_system_id`
        FROM `deploy_app_config`
        WHERE `app_module_id` = 0
          AND `env_id` = 0
          <if test="list != null and list.size() > 0">
            AND `app_system_id` IN
                <foreach collection="list" item="appSystemId" open="(" separator="," close=")">
                #{appSystemId}
                </foreach>
          </if>
    </select>

    <select id="getAppConfigUserAppSystemIdList" resultType="java.lang.Long">
        SELECT
            `app_system_id`
        FROM `deploy_app_config_user`
        WHERE `user_uuid` = #{userUuid}
        <if test="appSystemIdList != null and appSystemIdList.size() > 0">
            AND `app_system_id` IN
            <foreach collection="appSystemIdList" item="appSystemId" open="(" separator="," close=")">
                #{appSystemId}
            </foreach>
        </if>
    </select>

    <select id="checkDeployAppConfigEnvDBAliasNameIsRepeat" resultType="java.lang.Integer">
        select count(1)
        from deploy_app_config_env_db
        where id != #{id}
          and db_alias = #{dbAlias}
          and `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </select>

    <select id="checkDeployAppConfigEnvDBExistsById" resultType="java.lang.Integer">
        select count(1)
        from deploy_app_config_env_db
        where id = #{id}
    </select>

    <select id="getAppConfigEnvDBConfigResourceIdByAppSystemIdAndAppModuleIdAndEnvId"
            resultType="java.lang.Long">
        select db_resource_id
        from deploy_app_config_env_db
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </select>

    <select id="getAppModuleListBySystemIdAndEnvId"
            resultType="codedriver.framework.deploy.dto.app.DeployAppModuleVo">
        (SELECT sieaa.app_module_id        as id,
                sieaa.app_module_name      as name,
                sieaa.app_module_abbr_name as abbrName
         FROM ${schemaName}.scence_ipobject_env_appmodule_appsystem sieaa
         WHERE sieaa.app_system_id = #{appSystemId}
           AND sieaa.env_id = #{envId}
           AND sieaa.`app_module_id` IS NOT NULL)
        union
        (
            SELECT dace.app_module_id as id,
                   ra.name,
                   ra.abbr_name   as abbrName
            FROM deploy_app_config_env dace
                     LEFT JOIN ${schemaName}.resource_appmodule ra ON ra.id = dace.app_module_id
            WHERE dace.app_system_id = #{appSystemId}
              AND dace.env_id = #{envId}
        )
    </select>

    <select id="getAppModuleCountBySystemIdAndEnvId" resultType="java.lang.Integer">
        select count(a.app_module_id)
        from ((SELECT sieaa.app_module_id
               FROM ${schemaName}.scence_ipobject_env_appmodule_appsystem sieaa
               WHERE sieaa.app_system_id = #{appSystemId}
                 AND sieaa.env_id = #{envId}
                 AND sieaa.`app_module_id` IS NOT NULL)
            union
              (
                  SELECT dace.app_module_id
                  FROM deploy_app_config_env dace
                           LEFT JOIN ${schemaName}.resource_appmodule ra ON ra.id = dace.app_module_id
                  WHERE dace.app_system_id = #{appSystemId}
                    AND dace.env_id = #{envId}
              )) a

    </select>

    <select id="getAppEnvAutoConfigBySystemIdAndModuleIdAndEnvId"
            resultMap="appEnvAutoConfigMap">
        select
            `app_system_id` AS appSystemId,
            `app_module_id` AS appModuleId,
            `env_id` AS envId,
            `instance_id` AS instanceId,
            `key`,
            `value`
        from `deploy_app_env_auto_config`
        where `app_system_id` = #{systemId} and `app_module_id` = #{moduleId} and `env_id` = #{envId}
    </select>

    <insert id="insertAppConfigAuthority">
        INSERT INTO `deploy_app_config_authority` (`app_system_id`,
                                                   `env_id`,
                                                   `auth_type`,
                                                   `auth_uuid`,
                                                   `action`,
                                                   `lcd`,
                                                   `lcu`)
        VALUES (#{appSystemId},
                #{envId},
                #{authType},
                #{authUuid},
                #{action},
                #{lcd},
                #{lcu})
        ON DUPLICATE KEY UPDATE `lcd` = #{lcd},
                                `lcu` = #{lcu};
    </insert>
    <insert id="insertAppModuleRunnerGroup">
        INSERT INTO `deploy_app_module_runner_group` (`app_system_id`, `app_module_id`, `runner_group_id`)
        VALUES (#{appSystemId}, #{appModuleId}, #{runnerGroupId})
        ON DUPLICATE KEY UPDATE `runner_group_id` = #{runnerGroupId}
    </insert>
    <insert id="insertAppEnvAutoConfig">
        INSERT INTO deploy_app_env_auto_config
        (`app_system_id`,`app_module_id`,`env_id`,`instance_id`,`key`,`value`,`lcd`,`lcu`)
        VALUES
        <foreach collection="keyValueList" item="keyValue" separator="),(" open="(" close=")">
            #{appSystemId},#{appModuleId},#{envId},#{instanceId},#{keyValue.key},#{keyValue.value},#{lcd},#{lcu}
        </foreach>
        ON DUPLICATE KEY UPDATE `key` = VALUES(`key`),`value` = VALUES(`value`),`lcd`= VALUES(`lcd`),`lcu` =
        VALUES(`lcu`);
    </insert>
    <insert id="insertAppConfig" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        INSERT INTO `deploy_app_config` (`id`,
                                         `app_system_id`,
                                         `app_module_id`,
                                         `env_id`,
                                         `config`,
                                         `fcd`,
                                         `fcu`,
                                         `lcd`,
                                         `lcu`)
        VALUES (#{id},
                #{appSystemId},
                #{appModuleId},
                #{envId},
                #{configStr},
                NOW(3),
                #{fcu},
                NOW(3),
                #{fcu})
    </insert>

    <insert id="insertAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        INSERT INTO `deploy_app_config_draft` (`app_system_id`,
                                               `app_module_id`,
                                               `env_id`,
                                               `config`,
                                               `fcd`,
                                               `fcu`,
                                               `lcd`,
                                               `lcu`)
        VALUES (#{appSystemId},
                #{appModuleId},
                #{envId},
                #{configStr},
                NOW(3),
                #{fcu},
                NOW(3),
                #{fcu})
    </insert>

    <insert id="insertAppConfigEnv">
        insert into deploy_app_config_env(`app_system_id`, `app_module_id`, `env_id`)
        VALUES
        <foreach collection="envIdList" separator="," item="envId">
            (#{appSystemId},
            #{appModuleId},
            #{envId})
        </foreach>
        ON DUPLICATE KEY
        UPDATE `app_system_id` = VALUES(app_system_id),
        `app_module_id` = VALUES(app_module_id),
        `env_id` = VALUES(env_id)
    </insert>

    <insert id="insertAppConfigSystemFavorite">
        insert into deploy_app_config_user(`app_system_id`, `user_uuid`)
        VALUES (#{appSystemId},
                #{userUuid})
        ON DUPLICATE KEY
            UPDATE `app_system_id` = #{appSystemId},
                   `user_uuid`     = #{userUuid}
    </insert>

    <insert id="insertAppConfigEnvDBConfig"
            parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigEnvDBConfigAccountVo">
        INSERT INTO deploy_app_config_env_db (id, db_alias, app_system_id, app_module_id, env_id, db_resource_id,
                                                     config)
        VALUES (#{id},
                #{dbAlias},
                #{appSystemId},
                #{appModuleId},
                #{envId},
                #{dbResourceId},
                #{configStr}) ON DUPLICATE KEY
        UPDATE `db_alias` = #{dbAlias},
            `config` = #{configStr}
    </insert>

    <insert id="insertAppConfigEnvDBConfigAccount"
            parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigEnvDBConfigVo">
        INSERT INTO deploy_app_config_env_db_account (id, account_id, account_alias, db_config_id)
        VALUES
        <foreach collection="accountList" separator="," item="item">
            (#{item.id},
            #{item.accountId},
            #{item.accountAlias},
            #{dbConfigId})
        </foreach>
        ON DUPLICATE KEY
        UPDATE `account_id` =VALUES(account_id),
        `account_alias` = VALUES(account_alias),
        `db_config_id` = VALUES(db_config_id)
    </insert>

    <update id="updateAppConfig" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        UPDATE `deploy_app_config`
        SET `config` = #{configStr},
            `lcu`    = #{lcu},
            `lcd`    = NOW(3)
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </update>

    <update id="updateAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        UPDATE `deploy_app_config_draft`
        SET `config` = #{configStr},
            `lcu`    = #{lcu},
            `lcd`    = NOW(3)
        WHERE `app_system_id` = #{appSystemId}
          and `app_module_id` = #{appModuleId}
          and `env_id` = #{envId}
    </update>

    <delete id="deleteAppConfigAuthorityByAppIdAndEnvIdAndAuthUuidAndLcd">
        delete
        from `deploy_app_config_authority`
        where `app_system_id` = #{appSystemId}
        and `env_id` = #{envId}
        and `auth_uuid` = #{authUuid}
        <if test="lcd != null">
            and `lcd` != #{lcd}
        </if>
    </delete>

    <delete id="deleteAppEnvAutoConfig">
        delete
        from deploy_app_env_auto_config
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envId != 0L">
                AND `env_id` = #{envId}
            </if>
            <if test="instanceId != null">
                and `instance_id` = #{instanceId}
            </if>
            <if test="lcd != null">
                and `lcd` != #{lcd}
            </if>
        </where>
    </delete>

    <delete id="deleteAppConfigDraft" parameterType="codedriver.framework.deploy.dto.app.DeployAppConfigVo">
        DELETE
        FROM `deploy_app_config_draft`
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envId != 0L">
                AND `env_id` = #{envId}
            </if>
        </where>
    </delete>

    <delete id="deleteAppConfigEnv">
        DELETE FROM `deploy_app_config_env`
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envId != 0L">
                AND `env_id` = #{envId}
            </if>
        </where>
    </delete>

    <delete id="deleteAppConfigSystemFavoriteByAppSystemIdAndUserUuid">
        DELETE
        FROM `deploy_app_config_user`
        WHERE `app_system_id` = #{appSystemId}
          and `user_uuid` = #{userUuid}
    </delete>

    <delete id="deleteAppConfig">
        DELETE FROM `deploy_app_config`
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envId != 0L">
                AND `env_id` = #{envId}
            </if>
        </where>
    </delete>

    <delete id="deleteAppConfigAuthorityByAppSystemId">
        delete
        from `deploy_app_config_authority`
        where `app_system_id` = #{appSystemId}
    </delete>

    <delete id="deleteAppModuleRunnerGroup">
        DELETE FROM `deploy_app_module_runner_group`
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
        </where>
    </delete>

    <delete id="deleteAppConfigDBConfigAccountByDBConfigId">
        delete
        from deploy_app_config_env_db_account
        where db_config_id = #{id}
    </delete>

    <delete id="deleteAppConfigDBConfigAccountByDBConfigIdList">
        delete
        from deploy_app_config_env_db_account
        where db_config_id in
        <foreach collection="list" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteAppConfigDBConfigAccount">
        DELETE
        FROM
        deploy_app_config_env_db_account
        WHERE
        db_config_id IN (
        SELECT
        id
        FROM
        deploy_app_config_env_db
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envId != 0L">
                AND `env_id` = #{envId}
            </if>
        </where>
        )
    </delete>

    <delete id="deleteAppConfigDBConfig">
        delete
        from deploy_app_config_env_db
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envId != 0L">
                AND `env_id` = #{envId}
            </if>
        </where>
    </delete>

    <delete id="deleteAppConfigDBConfigById">
        delete
        from deploy_app_config_env_db
        where id = #{id}
    </delete>

    <delete id="deleteAppConfigEnvByAppSystemIdAndAppModuleIdAndEnvIdList">
        DELETE FROM `deploy_app_config_env`
        <where>
            <if test="appSystemId != null">
                AND `app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != 0L">
                AND `app_module_id` = #{appModuleId}
            </if>
            <if test="envIdList != null and envIdList.size() > 0">
                AND `env_id` IN
                <foreach collection="envIdList" item="envId" open="(" separator="," close=")">
                    #{envId}
                </foreach>
            </if>
        </where>
    </delete>

    <delete id="deleteAppConfigDBConfigByIdList">
        delete
        from deploy_app_config_env_db
        where id in
        <foreach collection="list" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>