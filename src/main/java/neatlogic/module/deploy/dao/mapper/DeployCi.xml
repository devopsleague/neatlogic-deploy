<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright(c) $today.year NeatLogic Co., Ltd. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.module.deploy.dao.mapper.DeployCiMapper">

    <select id="checkDeployCiIsRepeat" parameterType="neatlogic.framework.deploy.dto.ci.DeployCiVo"
            resultType="java.lang.Integer">
        select count(1)
        from deploy_ci
        where `id` != #{id}
          and `name` = #{name}
    </select>

    <select id="getDeployCiById" parameterType="java.lang.Long"
            resultType="neatlogic.framework.deploy.dto.ci.DeployCiVo">
        select `id`,
               `name`,
               `is_active`           as isActive,
               `app_system_id`       as appSystemId,
               `app_module_id`       as appModuleId,
               `repo_type`           as repoType,
               `repo_server_address` as repoServerAddress,
               `repo_name`           as repoName,
               `branch_filter`       as branchFilter,
               `event`,
               `action`,
               `trigger_type`        as triggerType,
               `trigger_time`        as triggerTime,
               `delay_time`          as delayTime,
               `version_rule`        as versionRuleStr,
               `config`              as configStr,
               `hook_id`             as hookId
        from deploy_ci
        where `id` = #{value}
    </select>

    <select id="getDeployCiListByIdList" parameterType="java.util.List"
            resultType="neatlogic.framework.deploy.dto.ci.DeployCiVo">
        select `id`,
               `name`,
               `is_active`           as isActive,
               `app_system_id`       as appSystemId,
               `app_module_id`       as appModuleId,
               `repo_type`           as repoType,
               `repo_server_address` as repoServerAddress,
               `repo_name`           as repoName,
               `branch_filter`       as branchFilter,
               `event`,
               `action`,
               `trigger_type`        as triggerType,
               `trigger_time`        as triggerTime,
               `delay_time`          as delayTime,
               `version_rule`        as versionRuleStr,
               `config`              as configStr,
               `hook_id`             as hookId
        from deploy_ci
        where `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getDeployCiLockById" parameterType="java.lang.Long"
            resultType="neatlogic.framework.deploy.dto.ci.DeployCiVo">
        select `id`,
               `name`,
               `is_active`           as isActive,
               `app_system_id`       as appSystemId,
               `app_module_id`       as appModuleId,
               `repo_type`           as repoType,
               `repo_server_address` as repoServerAddress,
               `repo_name`           as repoName,
               `branch_filter`       as branchFilter,
               `event`,
               `action`,
               `trigger_type`        as triggerType,
               `trigger_time`        as triggerTime,
               `delay_time`          as delayTime,
               `version_rule`        as versionRuleStr,
               `config`              as configStr,
               `hook_id`             as hookId
        from deploy_ci
        where `id` = #{value} for update
    </select>

    <sql id="searchDeploy">
        from deploy_ci
        <where>
            app_system_id = #{appSystemId}
            <if test="keyword != null and keyword != ''">
                and `name` like CONCAT('%',#{keyword}, '%')
            </if>
        </where>
    </sql>

    <select id="searchDeployCiCount" parameterType="neatlogic.framework.deploy.dto.ci.DeployCiVo"
            resultType="java.lang.Integer">
        select count(1)
        <include refid="searchDeploy"/>
    </select>

    <select id="searchDeployCiList" parameterType="neatlogic.framework.deploy.dto.ci.DeployCiVo"
            resultType="neatlogic.framework.deploy.dto.ci.DeployCiVo">
        select
        `id`,
        `name`,
        `is_active` as isActive,
        `app_system_id` as appSystemId,
        `app_module_id` as appModuleId,
        `repo_type` as repoType,
        `repo_server_address` as repoServerAddress,
        `repo_name` as repoName,
        `branch_filter` as branchFilter,
        `event`,
        `action`,
        `lcu`,
        `lcd`
        <include refid="searchDeploy"/>
        order by `lcd` desc
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getDeployCiListByRepoServerAddressAndRepoNameAndEvent"
            resultType="neatlogic.framework.deploy.dto.ci.DeployCiVo">
        select `id`,
        `name`,
        `is_active` as isActive,
        `app_system_id` as appSystemId,
        `app_module_id` as appModuleId,
        `repo_type` as repoType,
        `repo_server_address` as repoServerAddress,
        `repo_name` as repoName,
        `branch_filter` as branchFilter,
        `event`,
        `action`,
        `trigger_type` as triggerType,
        `trigger_time` as triggerTime,
        `version_rule` as versionRuleStr,
        `config` as configStr
        from deploy_ci
        where is_active = 1 and repo_name = #{repoName} and event = #{event}
        and repo_server_address in
        <foreach collection="ipList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="searchDeployCiAuditCount" parameterType="neatlogic.framework.deploy.dto.ci.DeployCiAuditVo"
            resultType="java.lang.Integer">
        select count(1)
        from deploy_ci_audit
        where ci_id = #{ciId}
    </select>

    <select id="searchDeployCiAudit" parameterType="neatlogic.framework.deploy.dto.ci.DeployCiAuditVo"
            resultType="neatlogic.framework.deploy.dto.ci.DeployCiAuditVo">
        select `id`,
               `commit_id`        as commitId,
               `action`,
               `status`,
               `job_id`           as jobId,
               `param_file_path`  as paramFilePath,
               `result_file_path` as resultFilePath,
               `error_file_path`  as errorFilePath,
               `fcd`
        from deploy_ci_audit a
        where ci_id = #{ciId}
        LIMIT #{startNum}, #{pageSize}
    </select>

    <update id="updateDeployActiveStatus">
        update deploy_ci
        set is_active = #{isActive}
        where id = #{id}
    </update>

    <insert id="insertDeployCi" parameterType="neatlogic.framework.deploy.dto.ci.DeployCiVo">
        insert into deploy_ci (`id`,
                               `name`,
                               `is_active`,
                               `app_system_id`,
                               `app_module_id`,
                               `repo_type`,
                               `repo_server_address`,
                               `repo_name`,
                               `branch_filter`,
                               `event`,
                               `action`,
                               `trigger_type`,
                               `trigger_time`,
                               `delay_time`,
                               `version_rule`,
                               `config`,
                               `hook_id`,
                               `fcu`,
                               `fcd`,
                               `lcu`,
                               `lcd`)
        values (#{id},
                #{name},
                #{isActive},
                #{appSystemId},
                #{appModuleId},
                #{repoType},
                #{repoServerAddress},
                #{repoName},
                #{branchFilter},
                #{event},
                #{action},
                #{triggerType},
                #{triggerTime},
                #{delayTime},
                #{versionRuleStr},
                #{configStr},
                #{hookId},
                #{fcu},
                now(3),
                #{lcu},
                now(3))
        ON DUPLICATE KEY UPDATE `name`                = #{name},
                                `is_active`           = #{isActive},
                                `app_system_id`       = #{appSystemId},
                                `app_module_id`       = #{appModuleId},
                                `repo_type`           = #{repoType},
                                `repo_server_address` = #{repoServerAddress},
                                `repo_name`           = #{repoName},
                                `branch_filter`       = #{branchFilter},
                                `event`               = #{event},
                                `action`              = #{action},
                                `trigger_type`        = #{triggerType},
                                `trigger_time`        = #{triggerTime},
                                `delay_time`          = #{delayTime},
                                `version_rule`        = #{versionRuleStr},
                                `config`              = #{configStr},
                                `hook_id`             = #{hookId},
                                `lcu`                 = #{lcu},
                                `lcd`                 = now(3)
    </insert>

    <insert id="insertDeployCiAudit" parameterType="neatlogic.framework.deploy.dto.ci.DeployCiAuditVo">
        insert into deploy_ci_audit (`id`,
                                     `ci_id`,
                                     `commit_id`,
                                     `action`,
                                     `status`,
                                     `job_id`,
                                     `param_file_path`,
                                     `result_file_path`,
                                     `error_file_path`,
                                     `fcd`)
        values (#{id},
                #{ciId},
                #{commitId},
                #{action},
                #{status},
                #{jobId},
                #{paramFilePath},
                #{resultFilePath},
                #{errorFilePath},
                now(3))
    </insert>

    <delete id="deleteDeployCiById" parameterType="java.lang.Long">
        delete
        from deploy_ci
        where id = #{value}
    </delete>

    <delete id="deleteDeployCiAuditByCiId" parameterType="java.lang.Long">
        delete
        from deploy_ci_audit
        where ci_id = #{value}
    </delete>

</mapper>
