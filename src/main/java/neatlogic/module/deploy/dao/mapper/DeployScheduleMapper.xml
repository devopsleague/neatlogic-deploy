<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright (C) 2024  深圳极向量科技有限公司 All Rights Reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.module.deploy.dao.mapper.DeployScheduleMapper">

    <select id="getScheduleById" parameterType="java.lang.Long" resultType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo">
        SELECT
            `id`,
            `uuid`,
            `name`,
            `begin_time` AS beginTime,
            `end_time` AS endTime,
            `cron`,
            `is_active` AS isActive,
            `config` AS configStr,
            `type`,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`,
            `app_system_id` AS appSystemId,
            `app_module_id` AS appModuleId,
            `pipeline_id` AS pipelineId,
            `pipeline_type` AS pipelineType
        FROM `deploy_schedule`
        WHERE `id` = #{value}
    </select>

    <select id="getScheduleByUuid" parameterType="java.lang.String" resultType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo">
        SELECT
            `id`,
            `uuid`,
            `name`,
            `begin_time` AS beginTime,
            `end_time` AS endTime,
            `cron`,
            `is_active` AS isActive,
            `config` AS configStr,
            `type`,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`,
            `app_system_id` AS appSystemId,
            `app_module_id` AS appModuleId,
            `pipeline_id` AS pipelineId,
            `pipeline_type` AS pipelineType
        FROM `deploy_schedule`
        WHERE `uuid` = #{value}
    </select>

    <select id="checkScheduleNameIsExists" parameterType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo" resultType="int">
        SELECT COUNT(1) FROM `deploy_schedule` WHERE `name` = #{name} and `id` != #{id}
    </select>

    <sql id="searchScheduleWhere">
        <where>
            <if test="keyword != null and keyword != ''">
                AND a.`name` LIKE concat('%', #{keyword}, '%')
            </if>
            <if test="isActive != null">
                AND a.`is_active` = #{isActive}
            </if>
            <if test="appSystemId != null">
                AND a.`app_system_id` = #{appSystemId}
            </if>
            <if test="appModuleId != null">
                AND a.`app_module_id` = #{appModuleId}
            </if>
            <if test="isHasAllAuthority == 0">
            AND (a.`type` = 'pipeline'
            OR daca.`app_system_id`
            <include refid="neatlogic.module.deploy.dao.mapper.DeployAppConfigMapper.checkDeployAuthority"/>
            )
            </if>
        </where>
    </sql>

    <select id="getScheduleCount" parameterType="neatlogic.framework.deploy.dto.schedule.DeployScheduleSearchVo" resultType="int">
        SELECT
            COUNT(1)
        FROM `deploy_schedule` a
        <if test="isHasAllAuthority == 0">
            LEFT JOIN `deploy_app_config_authority` daca ON daca.`app_system_id` = a.`app_system_id`
        </if>
        <include refid="searchScheduleWhere"/>
    </select>

    <select id="getScheduleList" parameterType="neatlogic.framework.deploy.dto.schedule.DeployScheduleSearchVo" resultType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo">
        SELECT
        a.`id`,
        a.`uuid`,
        a.`name`,
        a.`begin_time` AS beginTime,
        a.`end_time` AS endTime,
        a.`cron`,
        a.`is_active` AS isActive,
        a.`config` AS configStr,
        a.`type`,
        a.`fcd`,
        a.`fcu`,
        a.`lcd`,
        a.`lcu`,
        a.`app_system_id` AS appSystemId,
        a.`app_module_id` AS appModuleId,
        a.`pipeline_id` AS pipelineId,
        a.`pipeline_type` AS pipelineType
        FROM `deploy_schedule` a
        <if test="isHasAllAuthority == 0">
            LEFT JOIN `deploy_app_config_authority` daca ON daca.`app_system_id` = a.`app_system_id`
        </if>
        <include refid="searchScheduleWhere"/>
        ORDER BY a.`lcd`
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="getScheduleListByIdList" parameterType="java.lang.Long" resultType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo">
        SELECT
        `id`,
        `uuid`,
        `name`,
        `begin_time` AS beginTime,
        `end_time` AS endTime,
        `cron`,
        `is_active` AS isActive,
        `config` AS configStr,
        `type`,
        `fcd`,
        `fcu`,
        `lcd`,
        `lcu`,
        `app_system_id` AS appSystemId,
        `app_module_id` AS appModuleId,
        `pipeline_id` AS pipelineId,
        `pipeline_type` AS pipelineType
        FROM `deploy_schedule`
        WHERE `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getScheduleAuditCountListByIdList" parameterType="java.lang.Long" resultType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo">
        SELECT
        a.`invoke_id` AS id,
        COUNT(1) AS execCount
        FROM `autoexec_job_invoke` a
        JOIN `autoexec_job` b ON b.`id` = a.`job_id`
        WHERE a.`invoke_id` IN
        <foreach collection="list" item="invokeId" open="(" separator="," close=")">
            #{invokeId}
        </foreach>
        GROUP BY a.`invoke_id`
    </select>

    <insert id="insertSchedule" parameterType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo">
        INSERT INTO `deploy_schedule` (
            `id`,
            `uuid`,
            `name`,
            `begin_time`,
            `end_time`,
            `cron`,
            `is_active`,
            `config`,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`,
            `type`,
            `app_system_id`,
            `app_module_id`,
            `pipeline_id`,
            `pipeline_type`
        )
        VALUES
        (
            #{id},
            #{uuid},
            #{name},
            #{beginTime},
            #{endTime},
            #{cron},
            #{isActive},
            #{configStr},
            NOW(3),
            #{fcu},
            NOW(3),
            #{fcu},
            #{type},
            #{appSystemId},
            #{appModuleId},
            #{pipelineId},
            #{pipelineType}
        )
    </insert>

    <update id="updateSchedule" parameterType="neatlogic.framework.deploy.dto.schedule.DeployScheduleVo">
        UPDATE `deploy_schedule`
        SET `name`               = #{name},
            `begin_time`         = #{beginTime},
            `end_time`           = #{endTime},
            `cron`               = #{cron},
            `is_active`          = #{isActive},
            `config`             = #{configStr},
            `lcd`                = NOW(3),
            `lcu`                = #{lcu}
        WHERE `id` = #{id}
    </update>

    <update id="updateScheduleIsActiveById" parameterType="java.lang.Long">
        UPDATE `deploy_schedule`
        SET `is_active` = 1-`is_active`
        WHERE `id` = #{value}
    </update>

    <delete id="deleteScheduleById" parameterType="java.lang.Long">
        DELETE FROM `deploy_schedule` WHERE `id` = #{value}
    </delete>
</mapper>